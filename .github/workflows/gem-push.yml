name: Ruby Gem

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # * is a special character in YAML so you have to quote this string, runs on each day of the week at 00:00 UTC
    - cron: '0 0 * * *'


jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1

    - name: Run tests
      env:
        DEBUG: true
      run: |
        gem install bundler
        bundle install
        bundle exec rake test

  build:
    name: Build + Publish
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby 2.6
      uses: actions/setup-ruby@v1

#    - name: Publish to GPR
#      run: |
#        mkdir -p $HOME/.gem
#        touch $HOME/.gem/credentials
#        chmod 0600 $HOME/.gem/credentials
#        printf -- "---\n:github: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
#        gem build *.gemspec
#        gem push --KEY github --host https://rubygems.pkg.github.com/${OWNER} *.gem
#      env:
#        GEM_HOST_API_KEY: "Bearer ${{secrets.GITHUB_TOKEN}}"
#        OWNER: ${{ github.repository_owner }}

    - name: Publish to RubyGems
      run: |
        mkdir -p $HOME/.gem
        touch $HOME/.gem/credentials
        chmod 0600 $HOME/.gem/credentials
        printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
        gem build *.gemspec
        RELEASE=`ls jarbler-*.gem | sed 's/jarbler-//' | sed 's/\.gem//'`
        echo "Checking rubygems.org for RELEASE=$RELEASE"
        ( gem search jarbler | grep jarbler | grep $RELEASE
          if [[ $? -eq 0 ]]; then
            echo "RELEASE=$RELEASE already exists on rubygems.org, no push executed"
          else
            echo "RELEASE=$RELEASE does not exist on rubygems.org"
            gem push *.gem
          fi
        )
      env:
        GEM_HOST_API_KEY: "${{secrets.RUBYGEMS_AUTH_TOKEN}}"
